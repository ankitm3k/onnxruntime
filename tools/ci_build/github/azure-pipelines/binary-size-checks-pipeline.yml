# steps in this build:
# 1a. ORT build
# 1b. ORT build with debug info

parameters:
- name: DoBuildWithDebugInfo
  displayName: Create additional build with debug information?
  type: boolean
  default: false

- name: BuildAllConfigurations
  displayName: Build all binary size check configurations instead of just the required ones?
  type: boolean
  default: false

resources:
  repositories:
  - repository: manylinux
    type: Github
    endpoint: Microsoft
    name: pypa/manylinux
    ref: 1a61614cabfd6b91c6afd6d9e172cc5b838c65fe

jobs:
- job: BinarySizeChecks
  timeoutInMinutes: 60
  workspace:
    clean: all
  pool: Linux-CPU-2019

  strategy:
    # Notes:
    # - BuildConfigFile path is relative to repository root.
    # - BinarySizeThresholdInBytes is optional - if unspecified it is not checked.
    matrix:
      # required configurations
      AndroidMinimalBaseline:
        BuildConfigFile: "tools/ci_build/github/linux/ort_minimal/build_check_binsize_config/android_minimal_baseline.config"
        BinarySizeThresholdInBytes: 1306224
      # additional configurations
      ${{ if or(eq(parameters.BuildAllConfigurations, true), and(in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))) }}:
        AndroidMinimalWithMobilePackageOps:
          BuildConfigFile: "tools/ci_build/github/linux/ort_minimal/build_check_binsize_config/android_minimal_with_mobile_package_ops.config"

  steps:
  - checkout: self
    clean: true
    submodules: none

  - template: templates/get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/linux/docker/Dockerfile.manylinux2014_cpu
      Context: tools/ci_build/github/linux/docker
      DockerBuildArgs: "--build-arg BUILD_UID=$( id -u )"
      Repository: onnxruntimecpubuild

  - task: PythonScript@0
    displayName: 'Set variables from config file "$(BuildConfigFile)"'
    inputs:
      scriptSource: inline
      script: |
        import json

        config_file_path = "$(BuildConfigFile)"
        with open(config_file_path, mode="r") as config_file:
            config = json.load(config_file)

        def set_var(name, value):
            print("Setting variable: {} = '{}'".format(name, value))
            print("##vso[task.setvariable variable={}]{}".format(name, value))

        set_var("BuildConfigType", config["type"])
        set_var("BuildConfigOs", config["os"])
      workingDirectory: $(Build.SourcesDirectory)
