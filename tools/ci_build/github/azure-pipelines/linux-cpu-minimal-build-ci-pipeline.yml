# This CI has the following steps:
# 1. Build full ORT, install the full ORT python wheel and use it to generate ort format test models
#    and include ops config file for step 3.
# 2. Build minimal ORT including all the kernels and disable exceptions.
#    This step is build only to safe-guard the --disable_exceptions option.
# 3. Build minimal ORT include only the kernels using the include ops config file from step 1,
#    and the models from <repo root>/onnxruntime/test/testdata/, run UT, and use onnx_test_runner to
#    test the ort format models generated in step 1.
#    Exceptions are enabled in this step to help debugging in case of CI failure.
#    This step builds and tests ORT with (3a) and without (3b) type reduction enabled.
# 4. Build minimal ORT with type reduction from a globally allowed types list.
#    This step uses a hard-coded list of types which may not include the types needed by the models
#    in <repo root>/onnxruntime/test/testdata/, so the tests for those models are skipped.
# 5. Build extended minimal ORT and run tests.
# 6. Build with all optional features disabled and no kernels.
#    6a: regular build with python enabled checks that the exclusions don't break code paths in a full build.
#    6b: minimal build with exceptions and python disabled checks that the exclusions don't break code paths in a
#        minimal build.
#    6c: extended minimal build with exceptions and python disabled checks that the exclusions don't break code paths
#        in an extended minimal build.
# 7. Build extended minimal ORT with NNAPI, with exceptions/RTTI/ml_ops disabled, for Android(arm64-v8a),
#    this safe-guards the extended minimal build with NNAPI EP.

resources:
  repositories:
  - repository: manylinux
    type: Github
    endpoint: Microsoft
    name: pypa/manylinux
    ref: 1a61614cabfd6b91c6afd6d9e172cc5b838c65fe

jobs:
- job: Linux_CPU_Minimal_Build_E2E
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool: Linux-CPU-2019

  variables:
    test_data_directory: $(Build.SourcesDirectory)/.test_data

  steps:
  - checkout: self
    clean: true
    submodules: none

  - template: templates/get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/linux/docker/Dockerfile.manylinux2014_cpu
      Context: tools/ci_build/github/linux/docker
      DockerBuildArgs: "--build-arg BUILD_UID=$( id -u )"
      Repository: onnxruntimecpubuild
